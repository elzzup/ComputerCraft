args = {...}
x = tonumber(args[1])
stairs = 0
fuel = 0
st = 0

h = fs.open("/log", "a") -- ログファイルに出力する
h.write("---- stairs ---- \n")

-- ログ出力機能
function write_msg(msg)
	h.write(tostring(msg).."\n")
	h.flush()
end

-- エラーログ出力機能
function erorrLog(...)
	if not r then
		h.write(tostring(e).."\n")
		h.flush()
	end
end

-- 現在の燃料を表示 --
fuel = turtle.getFuelLevel()
print ("------------\n"..fuel.."dayo!\n------------")

-- 入力された値に対して燃料が足りているか調べる --
if tonumber(fuel) <= tonumber(x)*3 then -- *3は帰りの分の燃料 --
	r,e = turtle.refuel(64)
	erorrLog()
end

-- 松明を置く機能 --
function placeTorch(...)
	turtle.turnLeft()
	turtle.turnLeft()
	turtle.select(16)
	r,e = turtle.place()
	erorrLog()
	turtle.turnLeft()
	turtle.turnLeft()
end

-- トーチを置くか判定
function tchTmg()
	if torch == 7 then
		placeTorch()
		torch = 0
		turtle.select(1)
		write_msg("place torch")
	end
end

-- ブロックがなくならないように
function itemCorrect()
	if 10 >= turtle.getItemCount(1) then
		turtle.select(1)
		for i = 1, 14 do
			if turtle.compareTo(i) then -- もし同じだったら
				turtle.select(i)
				turtle.transferTo(1) -- 16に移動させる
			end
		end
	end
	turtle.select(1)
	if 10 >= turtle.getItemCount(1) then
		write_msg("shutdown")
		os.shutdown()
	end
end

-- 壁を作る機能
function wall()
	write_msg("make wall")
	turtle.turnRight()
	placeSt()
	turtle.turnRight()
	turtle.turnRight()
	placeSt()
	turtle.turnRight()
end

-- 石を置く機能
function placeSt()
	if turtle.place() then
		st = st + 1
	end
end

function placeStD()
	if turtle.placeDown() then
		st = st + 1
	end
end

function placeStU()
	if turtle.placeUp() then
		st = st + 1
	end
end

-- 砂利対策
function grvl() 
	while turtle.detect() do
		turtle.dig()
		sleep()
	end
end

function grvlUp()
	while turtle.detectUp() do
		turtle.digUp()
		sleep()
	end
end

-- 階段作り部分
function dgUp()
	write_msg("dgUp")
	grvlUp()
	turtle.up()
	grvlUp()
end

function dgFw()
	write_msg("dgFw")
	grvl()
	turtle.forward()
	turtle.digDown()
	turtle.placeDown()
end

-- 実行部分
for i = 1, x do
	itemCorrect()
	dgUp()
	dgFw()
	wall()
	-- 松明判定
	torch = torch + 1
	tchTmg()
	-- 階段数える
	stairs = stairs + 1
	print (stairs)
end